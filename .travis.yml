# This is the simple Travis configuration, which is intended for use
# on applications which do not require cross-platform and
# multiple-GHC-version support. For more information and other
# options, see:
#
# https://docs.haskellstack.org/en/stable/travis_ci/
#
# Copy these contents into the root directory of your Github project in a file
# named .travis.yml

sudo: false

# Do not choose a language; we provide our own build tools.
language: haskell

notifications:
  slack: slacker-team-group:blhdpAIn8vnojRfNf59wqKsS
  email: false

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.stack
  - /home/travis/build/Haskell-Praxis/core-catcher/elm-stuff/build-artifacts
  - /home/travis/build/Haskell-Praxis/core-catcher/.stack-work
  - $(npm config get prefix)/bin/elm

# Ensure necessary system libraries are present
addons:
  apt:
    packages:
      - libgmp-dev

before_install:
  # Download and unpack the stack executable
  - npm install -g elm
  - elm --version
  - elm-package install -y
  - mkdir -p ~/.local/bin
  - export PATH=$HOME/.local/bin:$PATH
  - export TRAVIS=travis-ci
  - export TRAVIS_JOB_ID=1234 # random number
  - travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  - travis_retry curl -OL https://github.com/fendor/stack-hpc-coveralls/releases/download/v0.0.4.1/shc-linux-x64-8.0.2.tar.bz2
  - tar -xvf shc-linux-x64-8.0.2.tar.bz2
  - ls


install:
  # Build dependencies
  - stack --no-terminal --install-ghc test --only-dependencies
  #- travis_wait elm-make frontend/Main.elm --output=web/elm.js


script:
  # Build the package, its tests, and its docs and run the tests
  - stack --no-terminal test :core-catcher-test --coverage --haddock --no-haddock-deps
  # test elm frontend TODO

after_script:
  # publish coverage results coveralls.io
  # after_script might clean some things
  - export TRAVIS_JOB_ID=${TRAVIS_BUILD_ID}
  # ignore coverage in module Network.Protocol
  - export TIX_FILE=`stack path --local-hpc-root`/core-catcher/core-catcher-test/core-catcher-test.tix
  - hpc map --exclude="Network.Protocol" --output="$TIX_FILE~" $TIX_FILE
  - mv $TIX_FILE~ $TIX_FILE
  - ./shc --repo-token=${repo_token} core-catcher core-catcher-test
  # ~/.local/bin/shc --repo-token=${repo_token} core-catcher core-catcher-test


